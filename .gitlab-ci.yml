
stages:
  - check
  - deploy

check format:
  stage: check
  image: ubuntu:latest
  allow_failure: true
  before_script:
    - apt update -y
    - apt install git clang-format -y
  script:
    - git-clang-format --style file --commit HEAD^
    - git diff --patch | tee 001-formatting.patch
    - test ! -s 001-formatting.patch
  artifacts:
    paths:
      - 001-formatting.patch
    expire_in: 1 week
    when: on_failure


test examples:
  stage: check
  image: shaguarger/platformio:latest
  script:
    - for file in examples/*; do pio ci --lib="." --board="m5stack-core-esp32" -O "framework=espidf" -O "platform=espressif32" -O "test_build_project_src=yes" $file; done
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - /root/.platformio/
      - .pio/


test hardware:
  stage: check
  image: shaguarger/platformio:latest
  script:
    - pio project init --board="m5stack-core-esp32" -O "framework=espidf" -O "platform=espressif32" -O "test_build_project_src=yes" -O "build_flags = -D CONFIG_MBEDTLS_DES_C -D KEYCARD_UNIT_TEST_MAIN"
    - pio remote --agent testinator test --upload-port /dev/ttyUSB0 --test-port /dev/ttyUSB0
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - /root/.platformio/
      - .pio/
  rules:
    - if: "$PLATFORMIO_AUTH_TOKEN"


pages:
  stage: deploy
  image: alpine
  script:
    - apk add doxygen
    - doxygen ./docs/doxigen.conf
    - mkdir -p public
    - cp -r docs/_build/html/* public
  artifacts:
    paths:
      - public
  only:
    - master
