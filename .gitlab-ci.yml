
stages:
  - check
  - deploy

test::examples:
  stage: check
  image: debian
  script:
    - apt update && apt -y install python3 python3-dev python3-pip binutils
    - pip3 install platformio
    - for file in examples/*; do pio ci --lib="." --board="m5stack-core-esp32" -O "framework=espidf" -O "platform=espressif32" -O "test_build_project_src=yes" $file; done

test::hardware:
  stage: check
  image: debian
  script:
    - apt update && apt -y install python3 python3-dev python3-pip binutils
    - pip3 install platformio
    - pio project init --board="m5stack-core-esp32" -O "framework=espidf" -O "platform=espressif32" -O "test_build_project_src=yes" -O "build_flags = -D CONFIG_MBEDTLS_DES_C -D KEYCARD_UNIT_TEST_MAIN"
    - pio remote test

pages:
  stage: deploy
  image: alpine
  script:
    - apk add doxygen
    - doxygen ./docs/doxigen.conf
    - mkdir -p public
    - cp -r docs/_build/html/* public
  artifacts:
    paths:
      - public
  only:
    - master
